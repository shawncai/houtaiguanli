package wy.addons.zsh.wsdl.controller;

import com.google.gson.Gson;
import net.sf.json.JSONObject;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import wy.addons.zsh.wsdl.service.impl.WsdlServiceImpl;
import wy.core.base.controller.BaseController;

import javax.annotation.Resource;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;

/**
 * Created by Administrator on 2018/4/15 0015.
 */
@Controller
@RequestMapping("/zshtzsps")
public class Wsdl extends BaseController {

    @Resource
    WsdlServiceImpl wsdlService;
    @RequestMapping("/token")
    public void token(HttpServletResponse response,HttpServletRequest request) throws Exception {
        // 获取json请求参数
        StringBuilder sb = new StringBuilder();
        InputStream is = request.getInputStream();
        BufferedInputStream bis = new BufferedInputStream(is);
        byte[] buffer = new byte[1024];
        int read = 0;
        while ((read = bis.read(buffer)) != -1) {
            sb.append(new String(buffer, 0, read, "UTF-8"));
        }
        System.out.println("入参:" + sb.toString());
        // 返回结果为json格式字符串
        String result = "";
        try {
            // 转换参数到Map
            Gson requestGson = new Gson();
            Map<String, Object> requestMap = new HashMap<String, Object>();
            requestMap = requestGson.fromJson(sb.toString(),
                    requestMap.getClass());
            // json格式参数
            JSONObject requestJsonData = JSONObject.fromObject(sb.toString());
            // 过程处理
            result = wsdlService.token(request, response, requestMap,
                    requestJsonData);

        } catch (Exception e) {
            JSONObject responseJson = new JSONObject();
            responseJson.put("code", "40000");
            responseJson.put("msg", "请求参数错误");
            result = responseJson.toString();
        }
        try {
            response.setContentType("text/html");
            response.setCharacterEncoding("UTF-8");
            ServletOutputStream out = response.getOutputStream();
            out.write(result.getBytes("UTF-8"));
            out.flush();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    @RequestMapping("/area")
    public void area(HttpServletResponse response,HttpServletRequest request) throws Exception {
        // 获取json请求参数
        StringBuilder sb = new StringBuilder();
        InputStream is = request.getInputStream();
        BufferedInputStream bis = new BufferedInputStream(is);
        byte[] buffer = new byte[1024];
        int read = 0;
        while ((read = bis.read(buffer)) != -1) {
            sb.append(new String(buffer, 0, read, "UTF-8"));
        }
        System.out.println("入参:" + sb.toString());
        // 返回结果为json格式字符串
        String result = "";
        try {
            // 转换参数到Map
            Gson requestGson = new Gson();
            Map<String, Object> requestMap = new HashMap<String, Object>();
            requestMap = requestGson.fromJson(sb.toString(),
                    requestMap.getClass());
            // json格式参数
            JSONObject requestJsonData = JSONObject.fromObject(sb.toString());
            // 过程处理
            result = wsdlService.area(request, response, requestMap,
                    requestJsonData);

        } catch (Exception e) {
            JSONObject responseJson = new JSONObject();
            responseJson.put("code", "40000");
            responseJson.put("msg", "请求参数错误");

            result = responseJson.toString();
        }
        try {
            response.setContentType("text/html");
            response.setCharacterEncoding("UTF-8");
            ServletOutputStream out = response.getOutputStream();
            out.write(result.getBytes("UTF-8"));
            out.flush();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @RequestMapping("/shop")
    public void shop(HttpServletResponse response,HttpServletRequest request) throws Exception {
        // 获取json请求参数
        StringBuilder sb = new StringBuilder();
        InputStream is = request.getInputStream();
        BufferedInputStream bis = new BufferedInputStream(is);
        byte[] buffer = new byte[1024];
        int read = 0;
        while ((read = bis.read(buffer)) != -1) {
            sb.append(new String(buffer, 0, read, "UTF-8"));
        }
        System.out.println("入参:" + sb.toString());
        // 返回结果为json格式字符串
        String result = "";
        try {
            // 转换参数到Map
            Gson requestGson = new Gson();
            Map<String, Object> requestMap = new HashMap<String, Object>();
            requestMap = requestGson.fromJson(sb.toString(),
                    requestMap.getClass());
            // json格式参数
            JSONObject requestJsonData = JSONObject.fromObject(sb.toString());
            // 过程处理
            result = wsdlService.shop(request, response, requestMap,
                    requestJsonData);
        } catch (Exception e) {
            JSONObject responseJson = new JSONObject();
            responseJson.put("code", "40000");
            responseJson.put("msg", "请求参数错误");
            result = responseJson.toString();
        }
        try {
            response.setContentType("text/html");
            response.setCharacterEncoding("UTF-8");
            ServletOutputStream out = response.getOutputStream();
            out.write(result.getBytes("UTF-8"));
            out.flush();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    //增加订单
    @RequestMapping("/add_bill")
    public void add_bill(HttpServletResponse response,HttpServletRequest request) throws Exception {
        // 获取json请求参数
        StringBuilder sb = new StringBuilder();
        InputStream is = request.getInputStream();
        BufferedInputStream bis = new BufferedInputStream(is);
        byte[] buffer = new byte[1024];
        int read = 0;
        while ((read = bis.read(buffer)) != -1) {
            sb.append(new String(buffer, 0, read, "UTF-8"));
        }
        System.out.println("入参:" + sb.toString());
        // 返回结果为json格式字符串
        String result = "";
        try {
            // 转换参数到Map
            Gson requestGson = new Gson();
            Map<String, Object> requestMap = new HashMap<String, Object>();
            requestMap = requestGson.fromJson(sb.toString(),
                    requestMap.getClass());
            // json格式参数
            JSONObject requestJsonData = JSONObject.fromObject(sb.toString());
            // 过程处理
            result = wsdlService.add_bill(request, response, requestMap,
                    requestJsonData);
        } catch (Exception e) {
            JSONObject responseJson = new JSONObject();
            responseJson.put("code", "40000");
            responseJson.put("msg", "请求参数错误");
            result = responseJson.toString();
        }
        try {
            response.setContentType("text/html");
            response.setCharacterEncoding("UTF-8");
            ServletOutputStream out = response.getOutputStream();
            out.write(result.getBytes("UTF-8"));
            out.flush();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    //增加订单
    @RequestMapping("/del_bill")
    public void del_bill(HttpServletResponse response,HttpServletRequest request) throws Exception {
        // 获取json请求参数
        StringBuilder sb = new StringBuilder();
        InputStream is = request.getInputStream();
        BufferedInputStream bis = new BufferedInputStream(is);
        byte[] buffer = new byte[1024];
        int read = 0;
        while ((read = bis.read(buffer)) != -1) {
            sb.append(new String(buffer, 0, read, "UTF-8"));
        }
        System.out.println("入参:" + sb.toString());
        // 返回结果为json格式字符串
        String result = "";
        try {
            // 转换参数到Map
            Gson requestGson = new Gson();
            Map<String, Object> requestMap = new HashMap<String, Object>();
            requestMap = requestGson.fromJson(sb.toString(),
                    requestMap.getClass());
            // json格式参数
            JSONObject requestJsonData = JSONObject.fromObject(sb.toString());
            // 过程处理
            result = wsdlService.del_bill(request, response, requestMap,
                    requestJsonData);
        } catch (Exception e) {
            JSONObject responseJson = new JSONObject();
            responseJson.put("code", "40000");
            responseJson.put("msg", "请求参数错误");
            result = responseJson.toString();
        }
        try {
            response.setContentType("text/html");
            response.setCharacterEncoding("UTF-8");
            ServletOutputStream out = response.getOutputStream();
            out.write(result.getBytes("UTF-8"));
            out.flush();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    //增加订单
    @RequestMapping("/check_send")
    public void check_send(HttpServletResponse response,HttpServletRequest request) throws Exception {
        // 获取json请求参数
        StringBuilder sb = new StringBuilder();
        InputStream is = request.getInputStream();
        BufferedInputStream bis = new BufferedInputStream(is);
        byte[] buffer = new byte[1024];
        int read = 0;
        while ((read = bis.read(buffer)) != -1) {
            sb.append(new String(buffer, 0, read, "UTF-8"));
        }
        System.out.println("入参:" + sb.toString());
        // 返回结果为json格式字符串
        String result = "";
        try {
            // 转换参数到Map
            Gson requestGson = new Gson();
            Map<String, Object> requestMap = new HashMap<String, Object>();
            requestMap = requestGson.fromJson(sb.toString(),
                    requestMap.getClass());
            // json格式参数
            JSONObject requestJsonData = JSONObject.fromObject(sb.toString());
            // 过程处理
            result = wsdlService.check_send(request, response, requestMap,
                    requestJsonData);
        } catch (Exception e) {
            JSONObject responseJson = new JSONObject();
            responseJson.put("code", "40000");
            responseJson.put("msg", "请求参数错误");
            result = responseJson.toString();
        }
        try {
            response.setContentType("text/html");
            response.setCharacterEncoding("UTF-8");
            ServletOutputStream out = response.getOutputStream();
            out.write(result.getBytes("UTF-8"));
            out.flush();
            out.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
