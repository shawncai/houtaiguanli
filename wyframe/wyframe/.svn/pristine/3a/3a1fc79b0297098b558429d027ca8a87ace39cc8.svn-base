package wy.xydframe.system.controller;

import com.alibaba.fastjson.JSON;
import net.sf.json.JSONObject;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import wy.addons.zcgl.cpn_dept.dao.Xyd_cpn_deptDao;
import wy.addons.zcgl.cpn_dept.dao.Xyd_cpn_deptMapper;
import wy.addons.zcgl.cpn_dept.model.Xyd_cpn_dept;
import wy.common.annotion.BussinessLog;
import wy.common.annotion.Permission;
import wy.common.constant.Dict;
import wy.common.constant.factory.ConstantFactory;
import wy.common.exception.BizExceptionEnum;
import wy.common.exception.BussinessException;
import wy.common.persistence.dao.DeptMapper;
import wy.common.persistence.model.Dept;
import wy.common.persistence.model.Page;
import wy.common.persistence.model.ResultMap;
import wy.core.base.controller.BaseController;
import wy.core.log.LogObjectHolder;
import wy.core.node.Node;
import wy.core.node.ZTreeNode;
import wy.core.shiro.ShiroKit;
import wy.core.util.ToolUtil;
import wy.core.util.TreeBuilder;
import wy.xydframe.system.dao.DeptDao;
import wy.xydframe.system.dao.DictDao;
import wy.xydframe.system.service.IDeptService;
import wy.xydframe.system.warpper.DeptWarpper;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.websocket.server.PathParam;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 部门控制器
 *
 * @author fengshuonan
 * @Date 2017年2月17日20:27:22
 */
@Controller
@RequestMapping("/dept")
public class DeptController extends BaseController {

    private String PREFIX = "/xydframe/dept/";

    @Resource
    DeptDao deptDao;

    @Resource
    Xyd_cpn_deptDao xyd_cpn_deptDao;

    @Resource
    Xyd_cpn_deptMapper xyd_cpn_deptMapper;

    @Resource
    IDeptService deptService;

    @Resource
    DictDao dictDao;

    /**
     * 跳转到企业组织管理首页
     */
    @RequestMapping("")
    public String index() {
        return PREFIX + "dept.html";
    }

    /**
     * 跳转到添加企业组织管理
     */
    @RequestMapping("/xyd_cpn_dept_add/{deptId}")
    public String xyd_cpn_deptAdd(@PathVariable("deptId") Integer deptId,Model model) {
        Integer userId = ShiroKit.getUser().getId();
        Integer branchId = xyd_cpn_deptDao.queryCpnBrandId(userId);
        Integer cpnId = xyd_cpn_deptDao.queryCpnId(userId);
        List<Map<String, Object>> cpnList = null;
        List<Map<String, Object>> cpnBranchList=null;
        if (ShiroKit.isAdmin()){
            cpnList=xyd_cpn_deptDao.userCpnList(null);
            cpnBranchList=xyd_cpn_deptDao.userCpnBranchList(null);
        }else{
            cpnList=xyd_cpn_deptDao.userCpnList(cpnId);
            cpnBranchList=xyd_cpn_deptDao.userCpnBranchList(cpnId);
        }
        List<Map<String, Object>> cpnStoreStList = this.dictDao.cpnStoreStList();
        String deptNm=xyd_cpn_deptDao.selectDeptNm(deptId);
        model.addAttribute("cpnStoreStList", cpnStoreStList);
        model.addAttribute("cpnList",cpnList);
        model.addAttribute("cpnBranchList", cpnBranchList);
        model.addAttribute("deptId", deptId);
        model.addAttribute("deptNm", deptNm);
        return PREFIX + "dept_add.html";
    }

    /**
     * 查询公司
     */
    @RequestMapping(value = "/cpnList")
    @ResponseBody
    public Object cpnList() {
        Integer userId = ShiroKit.getUser().getId();
        Integer cpnId = xyd_cpn_deptDao.queryCpnId(userId);
        List<Map<String, Object>> list = this.xyd_cpn_deptDao.nowList(cpnId);
        return list;
    }

    /**
     * 跳转到添加参数
     */
    @RequestMapping("/xyd_cpn_dept_add_param")
    public String xyd_cpn_dept_add_param() {
        return PREFIX + "xyd_cpn_dept_add_param.html";
    }

    /**
     * 跳转到修改企业组织管理
     */
    @RequestMapping("/xyd_cpn_dept_update/{xyd_cpn_deptId}")
    public String xyd_cpn_deptUpdate(@PathVariable Integer xyd_cpn_deptId, Model model) {
        Xyd_cpn_dept xyd_cpn_dept = this.xyd_cpn_deptDao.queryById(xyd_cpn_deptId);
        String pCpnDeptNm = xyd_cpn_deptDao.selectPCpnDeptNm(xyd_cpn_deptId);
        List<Map<String, Object>> cpnList=xyd_cpn_deptDao.selectCpns();
        List<Map<String, Object>> cpnBranchList = xyd_cpn_deptDao.selectCpnBranchs();
        List<Map<String, Object>> cpnStoreStList = this.dictDao.cpnStoreStList();
        Integer Parcpndeptid=xyd_cpn_dept.getPar_cpn_dept_id();
        String pdeptNm=xyd_cpn_deptDao.queryDeptNm(Parcpndeptid);
        model.addAttribute("cpnList",cpnList);
        model.addAttribute("pdeptNm",pdeptNm);
        model.addAttribute("cpnStoreStList", cpnStoreStList);
        model.addAttribute("cpnBranchList", cpnBranchList);
        model.addAttribute("pCpnDeptNm", pCpnDeptNm);
        model.addAttribute(xyd_cpn_dept);
        LogObjectHolder.me().set(xyd_cpn_dept);
        return PREFIX + "dept_edit.html";
    }

    /**
     * 跳转到详情企业组织管理
     */
    @RequestMapping("/xyd_cpn_dept_detail/{xyd_cpn_deptId}")
    public String xyd_cpn_deptDetail(@PathVariable Integer xyd_cpn_deptId, Model model) {
        Xyd_cpn_dept xyd_cpn_dept = this.xyd_cpn_deptDao.queryById(xyd_cpn_deptId);
        //获取上级部门名字
        String pCpnDeptNm = xyd_cpn_deptDao.selectPCpnDeptNm(xyd_cpn_deptId);
        //获取状态名字
        List<Map<String, Object>> cpnDeptStList = dictDao.selectCpnDeptSts();
        Integer cpnDeptStId = xyd_cpn_dept.getSt_id();
        for(Map cpnDeptStMap : cpnDeptStList) {
            if(cpnDeptStMap.get("num").equals(cpnDeptStId)) {
                model.addAttribute("st_id", cpnDeptStMap.get("name"));
            }
        }
        List<Map<String, Object>> cpnList=xyd_cpn_deptDao.selectCpns();
        List<Map<String, Object>> cpnBranchList = xyd_cpn_deptDao.selectCpnBranchs();
        List<Map<String, Object>> cpnStoreStList = this.dictDao.cpnStoreStList();
        Integer Parcpndeptid=xyd_cpn_dept.getPar_cpn_dept_id();
        String pdeptNm=xyd_cpn_deptDao.queryDeptNm(Parcpndeptid);
        model.addAttribute("cpnStoreStList", cpnStoreStList);
        model.addAttribute("cpnList",cpnList);
        model.addAttribute("cpnBranchList", cpnBranchList);
        model.addAttribute("pCpnDeptNm", pCpnDeptNm);
        model.addAttribute("pdeptNm",pdeptNm);
        model.addAttribute(xyd_cpn_dept);
        LogObjectHolder.me().set(xyd_cpn_dept);
        return PREFIX + "dept_detail.html";
    }

    @RequestMapping("/bulidJsonTree")
    @ResponseBody
    public String buildJsonTree(HttpServletRequest request) {
        List<Node> nodes = deptDao.tree1();
        String json = new TreeBuilder().buildTree(nodes);
        return json;
    }

    @RequestMapping("/bulidJson")
    @ResponseBody
    public JSONObject buildJson(HttpServletResponse response, @RequestParam(required = false) String condition, @RequestParam(required = false) Integer id) {
        if (null==id){
            id=0;
        }
        List list=deptDao.list4(condition,id);
        Map<String,Object> map = new HashMap<String,Object>();
        map.put("data",list);
        String json= JSON.toJSONString(map);
        System.out.println(json);
        JSONObject jsStr = JSONObject.fromObject(json);
        System.err.println(jsStr);
        return jsStr;
    }

    /**
     * 新增企业组织管理
     */
    @RequestMapping(value = "/add")
    @ResponseBody
    public Object add(@PathParam("cpnid") Integer cpnid, @PathParam("xyd_cpn_dept") Xyd_cpn_dept xyd_cpn_dept) {
        xyd_cpn_dept.setCre_dt(new Date());
        xyd_cpn_dept.setCpn_id(cpnid);
        xyd_cpn_dept.setSt_id(1);
        return this.xyd_cpn_deptMapper.insert(xyd_cpn_dept);
    }

    /**
     * 删除企业组织管理
     */
    @RequestMapping(value = "/delete")
    @ResponseBody
    public Object delete(@RequestParam Integer xyd_cpn_deptId) {
        this.xyd_cpn_deptMapper.deleteById(xyd_cpn_deptId);
        return SUCCESS_TIP;
    }

    /**
     * 修改企业组织管理
     */
    @RequestMapping(value = "/update")
    @ResponseBody
    public Object update(Xyd_cpn_dept xyd_cpn_dept) {
        this.xyd_cpn_deptMapper.updateById(xyd_cpn_dept);
        return super.SUCCESS_TIP;
    }

    /**
     * layui-content后台代码
     * @return
     */
    @RequestMapping("/backContent")
    @ResponseBody
    public ResultMap<List<Map>> backContent(Page page, @RequestParam("limit") int limit, @RequestParam(required = false) String condition, @RequestParam(required = false) Integer id){
        System.out.println("backContent========================"+limit);
        page.setRows(limit);
        System.out.println("page:"+page.toString());
        Integer start=page.getStart();
        Integer rows=page.getRows();
        if(ShiroKit.isAdmin()) {
            if (null == id) {
                id = 0;
            }
            List<Map> contentList = deptDao.selectPageList(page, start, rows, condition, id);
            int totals = deptDao.selectPageCount(page, id);
            page.setTotalRecord(totals);
            return new ResultMap<List<Map>>("", contentList, 0, totals);
        }
        else {
            List<Map> contentList = deptDao.selectPageList(page, start, rows, condition, id);
            int totals = deptDao.selectPageCount(page, id);
            page.setTotalRecord(totals);
            return new ResultMap<List<Map>>("", contentList, 0, totals);
        }
    }


}
