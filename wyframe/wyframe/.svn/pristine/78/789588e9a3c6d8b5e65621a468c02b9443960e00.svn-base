package wy.xydframe.system.dao;

import wy.common.persistence.model.Page;
import wy.core.node.MenuNode;
import wy.core.node.Node;
import wy.core.node.ZTreeNode;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

/**
 * 菜单相关的dao
 *
 * @author fengshuonan
 * @date 2017年2月12日 下午8:43:52
 */
public interface MenuDao {

    /**
     * 根据条件查询菜单
     *
     * @return
     * @date 2017年2月12日 下午9:14:34
     */
    List<Map<String, Object>> selectMenus(@Param("condition") String condition,@Param("level") String level);

    /**
     * 根据条件查询菜单
     *
     * @return
     * @date 2017年2月12日 下午9:14:34
     */
    List<Integer> getMenuIdsByRoleId(@Param("roleId") Integer roleId);
    
    /**
     * 根据当前登录用户ID查询菜单
     *
     * @return
     * @date 
     */
    List<Integer> getMenuIdsByNowRoleId(@Param("userRoleId") Integer userRoleId);

    /**
     * 获取菜单列表树
     *
     * @return
     * @date 2017年2月19日 下午1:33:51
     */
    List<ZTreeNode> menuTreeList();
    
    /**
     * 区域管理员下获取菜单列表树
     *
     * @return
     * @date 
     */
    List<ZTreeNode> menuSomeTreeList(List<Integer> nowMenuIds);

    /**
     * 获取菜单列表树
     *
     * @return
     * @date 2017年2月19日 下午1:33:51
     */
    List<ZTreeNode> menuTreeListByMenuIds(List<Integer> menuIds);
    
    /**
     * 区域管理员下获取菜单列表树
     *
     * @return
     * @date 
     */
    List<ZTreeNode> menuSomeTreeListByMenuIds(List<Integer> menuIds);
    
    /**
     * 区域管理员下点击其他角色获取菜单列表树
     *
     * @return
     * @date 
     */
    List<ZTreeNode> menuOtherTreeListByMenuIds(List<Integer> menuIds);

    /**
     * 删除menu关联的relation
     *
     * @param menuId
     * @return
     * @date 2017年2月19日 下午4:10:59
     */
    int deleteRelationByMenu(Integer menuId);

    /**
     * 获取资源url通过角色id
     *
     * @param roleId
     * @return
     * @date 2017年2月19日 下午7:12:38
     */
    List<String> getResUrlsByRoleId(Integer roleId);

    /**
     * 根据角色获取菜单
     *
     * @param roleIds
     * @return
     * @date 2017年2月19日 下午10:35:40
     */
    List<MenuNode> getMenusByRoleIds(List<Integer> roleIds);

    Map<String,Object> selectMenuById(Integer codeId);
    
    void addMenu(Map<String,Object> map);

    List<Node> tree1();

    List<Map<String, Object>> list4(@Param("condition") String condition,@Param("id") Integer id);

    int selectPageCount(@Param("page") Page page, @Param("id") Integer id);

    List<Map> selectPageList(@Param("page") Page page,@Param("start") Integer start,@Param("rows") Integer rows,@Param("id") Integer id,@Param("condition") String condition);
}
