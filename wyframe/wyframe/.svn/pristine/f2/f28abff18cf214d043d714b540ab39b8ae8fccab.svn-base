<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wy.xydframe.system.dao.UserMgrDao">

	<sql id="Base_Column_List">
		id, account, name, birthday, sex, email, avatar,
		phone, roleid,
		deptid, status,
		createtime, version, parentid, cpn_id, cpn_dept_id, cpn_branch_id
	</sql>
	
	<sql id="Base_Column_List_With_Pwd">
		id, account, name, birthday,password, sex, email, avatar,
		phone, roleid,salt,
		deptid, status,
		createtime, version
	</sql>
	
	<sql id="Base_Column_role">
		roleid
	</sql>
	
	<select id="queryCpnId" resultType="Integer">
		select 
			cpn_id
		from user
		where id = #{userId}
	</select>
	
	<select id="queryCpnBrandId" resultType="Integer">
		select 
			cpn_branch_id
		from user
		where id = #{userId}
	</select>

	<select id="selectCpnId" resultType="Integer">
		select
		cpn_id
		from xyd_cpn_dept
		where cpn_dept_id = #{deptId}
	</select>

	<select id="selectCpnBrandId" resultType="Integer">
		select
		cpn_branch_id
		from xyd_cpn_dept
		where cpn_dept_id = #{deptId}
	</select>
	
	<select id="selectUsers" resultType="map">
		SELECT * from user
	</select>

	<!--模糊查询-->
	<select id="findByNameOrNo" resultType="map">
		SELECT  * FROM USER WHERE NAME concat('%',#{condition},'%') OR account CONCAT('%',#{condition},'%')
	</select>
	
	<select id="selectSomeUsers" resultType="map">
		SELECT a2.*,d.cpn_dept_nm,c.cpn_nm,b.cpn_branch_nm
		from
		(select a1.*
		from user a1 ,
		(select b1.cpn_dept_id from xyd_cpn_dept b1 where b1.cpn_dept_id = #{deptid}
		UNION
		select b1.cpn_dept_id from xyd_cpn_dept b1 where b1.par_cpn_dept_id = #{deptid}
		union
		select b1.cpn_dept_id from xyd_cpn_dept b1,xyd_cpn_dept b2 where b1.par_cpn_dept_id=b2.cpn_dept_id and b2.par_cpn_dept_id = #{deptid}
		union
		select b1.cpn_dept_id from xyd_cpn_dept b1,xyd_cpn_dept b2, xyd_cpn_dept b3 where b1.par_cpn_dept_id=b2.cpn_dept_id and b2.par_cpn_dept_id=b3.cpn_dept_id and b3.par_cpn_dept_id =  #{deptid}
		) m1 	where a1.cpn_dept_id=m1.cpn_dept_id) a2
		LEFT JOIN xyd_cpn  c on a2.cpn_id=c.cpn_id
		LEFT JOIN xyd_cpn_branch  b on a2.cpn_branch_id=b.cpn_branch_id
		LEFT JOIN xyd_cpn_dept  d on a2.cpn_dept_id=d.cpn_dept_id
		where  a2.status != 3 and a2.cpn_id= #{cpnId}
		<if test="name != null and name != ''">
			and (a2.phone like CONCAT('%',#{name},'%')
			or a2.account like CONCAT('%',#{name},'%')
			or a2.name like CONCAT('%',#{name},'%'))
		</if>

		<if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
			and (a2.createTime between CONCAT(#{beginTime},' 00:00:00') and CONCAT(#{endTime},' 23:59:59'))
		</if>
	</select>
	
	<update id="setStatus">
		update user set status = #{status} where id =
		#{userId}
	</update>
	
	<delete id="deleteUser">
		delete from user where id = #{userId}
	</delete>

	<update id="changePwd">
		update user set password = #{pwd} where id =
		#{userId}
	</update>
	
	<update id="setRoles">
		update user set roleid = #{roleIds} where id =
		#{userId}
	</update>

	<update id="setDepts">
		update xyd_cpn_dept_user set cpn_dept_id = #{deptIds} where id =
		#{userId}
	</update>

	<update id="setCpnAndCpnBranch">
		update xyd_cpn_dept_user set cpn_branch_id = #{cpnBranchId}, cpn_id= #{cpnId} where cpn_dept_id =
		#{deptid}
	</update>
	
	<select id="getByAccount" resultType="user">
		select
		<include refid="Base_Column_List_With_Pwd" />
		from user where account = #{account} and status != 3
	</select>
	
	<select id="getRoles" resultType="String">
		select
		<include refid="Base_Column_role" />
		from user where id = #{userId}
	</select>
	
	<select id="selectUserDeptName" resultType="String">
		select
			cpn_dept_nm
		from xyd_cpn_dept where cpn_dept_id = #{userDeptId}
	</select>
		
	<delete id="deleteArea" parameterType="Integer">
		delete from bs_area_limit where USER_ID=#{userId}
	</delete>
	
	<insert id="insertAreaId" parameterType="java.util.List">
		insert into bs_area_limit (USER_ID,AREA_ID)
		values
		<foreach collection="list" item="item" index="index"
			separator=","> (#{item.user_id},#{item.area_id}) </foreach>
	</insert>
	
	<!-- 查询地区通过Id -->
	<select id="selectAreaIdById" resultType="Integer">
		select AREA_ID from
		bs_area_limit
		where USER_ID=#{userId}
	</select>
	
	<!-- 控制查询地区通过Id -->
	<select id="selectAreaIdByNowId" resultType="Integer">
		select AREA_ID from
		bs_area_limit
		where USER_ID=#{userNowId}
	</select>
	
	<!-- 加载全部地区Tree -->
	<select id="areaTreeList" resultType="wy.core.node.ZTreeNode">
		select AREA_ID
		"id",PAR_AREA_ID "pId",AREA_NM "name",(case when (PAR_AREA_ID =0 or
		PAR_AREA_ID is null) then 'true' else 'false' end) "close" from
		bs_send_area
	</select>
	
	<!-- 加载当前管理员分配地区Tree -->
	<select id="areaSomeTreeList" resultType="wy.core.node.ZTreeNode" parameterType="Integer">
		select a.AREA_ID
		"id",a.PAR_AREA_ID "pId",a.AREA_NM "name",(case when (a.PAR_AREA_ID =0 or
		a.PAR_AREA_ID is null) then 'true' else 'false' end) "close" from
		bs_send_area a
		inner join
		bs_area_limit b on a.AREA_ID=b.AREA_ID and b.USER_ID=#{userNowId}
	</select>
	
	<!-- 加载选中地区tree -->
	<select id="areaTreeListById" resultType="wy.core.node.ZTreeNode"> 
		select r.AREA_ID "id",r.PAR_AREA_ID "pId",r.AREA_NM "name",(case when
		(r.PAR_AREA_ID =0 or r.PAR_AREA_ID is null) then 'true' else 'false'
		end) "close" ,
		(
		CASE
		WHEN (r1.AREA_ID = 0 OR r1.AREA_ID IS NULL) THEN
		'false'
		ELSE
		'true'
		END
		) "checked"
		FROM
		bs_send_area r
		LEFT JOIN (
		SELECT
		b.USER_ID,
		b.AREA_ID
		FROM
		bs_area_limit b
		WHERE
		b.AREA_ID IN
		<foreach collection="array" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
		) r1 ON r.AREA_ID = r1.AREA_ID and r1.USER_ID=#{userId}
	</select>
	
	<!-- 区域管理员下加载选中地区tree -->
	<select id="areaSomeTreeListById" resultType="wy.core.node.ZTreeNode">
		select r.AREA_ID "id",r.PAR_AREA_ID "pId",r.AREA_NM "name",(case when
		(r.PAR_AREA_ID =0 or r.PAR_AREA_ID is null) then 'true' else 'false'
		end) "close" ,
		(
		CASE
		WHEN (r1.AREA_ID = 0 OR r1.AREA_ID IS NULL) THEN
		'false'
		ELSE
		'true'
		END
		) "checked"
		FROM
		bs_send_area r
		inner join
		bs_area_limit c on r.AREA_ID=c.AREA_ID and c.USER_ID=#{userNowId}
		LEFT JOIN (
		SELECT
		b.USER_ID,
		b.AREA_ID
		FROM
		bs_area_limit b
		WHERE
		b.AREA_ID IN
		<foreach collection="array" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
		) r1 ON r.AREA_ID = r1.AREA_ID and r1.USER_ID=#{userId}
	</select>


	<!-- 查询部门通过Id -->
	<select id="selectDeptIdById" resultType="Integer">
		select cpn_dept_id from
		xyd_cpn_dept_user
		where id=#{userId}
	</select>

	<select id="deptTreeList" resultType="wy.core.node.ZTreeNode">
		select cpn_dept_id
		"id",par_cpn_dept_id "pId",cpn_dept_nm "name",(case when (par_cpn_dept_id =0 or
		par_cpn_dept_id is null) then 'true' else 'false' end) "close" from
		xyd_cpn_dept
	</select>

	<select id="selectById" resultType="Cpn_dept_user">
		select *
		from xyd_cpn_dept_user where id = #{userId}
	</select>

	<select id="deptTreeListById" resultType="wy.core.node.ZTreeNode">
	select t.cpn_dept_id "id",t.par_cpn_dept_id "pId",t.cpn_dept_nm "name",(case when
	(t.par_cpn_dept_id =0 or t.par_cpn_dept_id is null) then 'true' else 'false'
	end) "close" ,
	(
	CASE
	WHEN (t1.cpn_dept_id = 0 OR t1.cpn_dept_id IS NULL) THEN
	'false'
	ELSE
	'true'
	END
	) "checked"
	FROM
		xyd_cpn_dept t
	LEFT JOIN (
	SELECT
	b.id,
	b.cpn_dept_id
	FROM
	xyd_cpn_dept_user b
	WHERE
	b.cpn_dept_id IN
	<foreach collection="array" index="index" item="item" open="("
			 separator="," close=")">
		#{item}
	</foreach>
	) t1 ON t.cpn_dept_id = t1.cpn_dept_id and t1.id=#{userId}
</select>


	<select id="deptSomeTreeList" resultType="wy.core.node.ZTreeNode" parameterType="Integer">
		select a.cpn_dept_id
		"id",a.par_cpn_dept_id "pId",a.cpn_dept_nm "name",(case when (a.par_cpn_dept_id =0 or
		a.par_cpn_dept_id is null) then 'true' else 'false' end) "close" from
		xyd_cpn_dept a
		inner join
		xyd_cpn_dept_user b on a.cpn_dept_id=b.cpn_dept_id and b.id=#{userNowId}
	</select>

	<!-- 区域管理员下加载选中地区tree -->
	<select id="deptSomeTreeListById" resultType="wy.core.node.ZTreeNode">
		select r.cpn_dept_id "id",r.par_cpn_dept_id "pId",r.cpn_dept_nm "name",(case when
		(r.par_cpn_dept_id =0 or r.par_cpn_dept_id is null) then 'true' else 'false'
		end) "close" ,
		(
		CASE
		WHEN (r1.cpn_dept_id = 0 OR r1.cpn_dept_id IS NULL) THEN
		'false'
		ELSE
		'true'
		END
		) "checked"
		FROM
		xyd_cpn_dept r
		inner join
		xyd_cpn_dept_user c on r.cpn_dept_id=c.cpn_dept_id and c.id=#{userNowId}
		LEFT JOIN (
		SELECT
		b.id,
		b.cpn_dept_id
		FROM
		xyd_cpn_dept_user b
		WHERE
		b.cpn_dept_id IN
		<foreach collection="array" index="index" item="item" open="("
				 separator="," close=")">
			#{item}
		</foreach>
		) r1 ON r.cpn_dept_id = r1.cpn_dept_id and r1.id=#{userId}
	</select>

	<select id="selectCpn" resultType="Integer">
		select
		cpn_id
		from xyd_cpn_dept
		where cpn_dept_id = #{deptid}
	</select>

	<select id="selectCpnBrand" resultType="Integer">
		select
		cpn_branch_id
		from xyd_cpn_dept
		where cpn_dept_id = #{deptid}
	</select>
	
	<select id="selectdeptId" resultType="Integer">
		select cpn_dept_id
		from xyd_cpn_dept_user
		where id = #{userId}
	</select>

	<update id="setUserDept">
		update user set cpn_dept_id = #{deptIds} where id =
		#{userId}
	</update>

	<update id="setUserCpnAndCpnBranch">
		update user set cpn_branch_id = #{cpnBranchId}, cpn_id= #{cpnId} where cpn_dept_id =
		#{deptid}
	</update>


	<select id="tree1" resultType="wy.core.node.Node">
		select cpn_dept_id as id,par_cpn_dept_id as pid,cpn_dept_nm as name from xyd_cpn_dept
	</select>



	<select id="selectPageCount" parameterType="wy.common.persistence.model.Page"  resultType="java.lang.Integer">
		select count(1) from (select c1.*,d1.area_nm as par_area_nm from
		(select a1.*
		from sys_area a1,
		(select b1.area_id from sys_area b1 where b1.area_id =#{id}
		UNION
		select b1.area_id from sys_area b1 where b1.par_area_id =#{id}
		union
		select b1.area_id from sys_area b1,sys_area b2 where b1.par_area_id=b2.area_id and b2.par_area_id =#{id}
		union
		select b1.area_id from sys_area b1,sys_area b2, sys_area b3 where b1.par_area_id=b2.area_id and b2.par_area_id=b3.area_id and b3.par_area_id =#{id}
		) m1
		where a1.area_id=m1.area_id
		order by
		a1.prov_nm,a1.city_nm,a1.region_nm,a1.street_nm,a1.area_nm
		)c1
		LEFT JOIN sys_area d1
		on c1.par_area_id=d1.area_id)u
	</select>
</mapper>